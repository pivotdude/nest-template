CREATE TABLE role (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(255),
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE client (
  id INT AUTO_INCREMENT PRIMARY KEY,
  fcs VARCHAR(255),
  email VARCHAR(255) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  inn INT,
  phone VARCHAR(255),
  date_of_birth DATETIME,
  work_place VARCHAR(255),
  address VARCHAR(255),
  status BOOLEAN NOT NULL DEFAULT TRUE,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  role_id INT NOT NULL DEFAULT 1,
  FOREIGN KEY (role_id) REFERENCES role(id)
);

CREATE TABLE passport (
  id INT AUTO_INCREMENT PRIMARY KEY,
  serial_and_number INT UNIQUE NOT NULL,
  birth_place VARCHAR(255),
  date_of_issue DATETIME NOT NULL,
  issuing_authority VARCHAR(255),
  client_id INT,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (client_id) REFERENCES client(id)
);



CREATE TABLE post (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  salary DOUBLE NOT NULL,
  description VARCHAR(255),
  requirements VARCHAR(255),
  duties VARCHAR(255),
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE employee (
  id INT AUTO_INCREMENT PRIMARY KEY,
  fc VARCHAR(255) NOT NULL,
  inn INT NOT NULL,
  phone VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  date_of_birth DATETIME NOT NULL,
  address VARCHAR(255) NOT NULL,
  post_id INT NOT NULL,
  passport_id INT NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (post_id) REFERENCES post(id),
  FOREIGN KEY (passport_id) REFERENCES passport(id)
);

CREATE TABLE account (
  id INT AUTO_INCREMENT PRIMARY KEY,
  status BOOLEAN NOT NULL DEFAULT TRUE,
  close_date DATETIME,
  client_id INT UNIQUE,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (client_id) REFERENCES client(id)
);

CREATE TABLE card (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  card_number VARCHAR(255) NOT NULL,
  expiration_date VARCHAR(255),
  cvv INT NOT NULL,
  account_id INT NOT NULL,
  balance DOUBLE NOT NULL DEFAULT 0,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (account_id) REFERENCES account(id)
);

CREATE TABLE credit (
  id INT AUTO_INCREMENT PRIMARY KEY,
  type VARCHAR(255) NOT NULL,
  rate DOUBLE NOT NULL,
  term VARCHAR(255) NOT NULL,
  conditions VARCHAR(255),
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE loan (
  id INT AUTO_INCREMENT PRIMARY KEY,
  account_id INT NOT NULL,
  credit_id INT NOT NULL,
  time DATETIME NOT NULL,
  initial_sum FLOAT NOT NULL,
  due_for_repayment FLOAT NOT NULL,
  term VARCHAR(255) NOT NULL,
  monthly_payment FLOAT NOT NULL,
  overpayment FLOAT NOT NULL,
  aim VARCHAR(255),
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (account_id) REFERENCES account(id),
  FOREIGN KEY (credit_id) REFERENCES credit(id)
);

CREATE TABLE exchange (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  purchase_rate FLOAT NOT NULL,
  sale_rate FLOAT NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE loan_payment (
  id INT AUTO_INCREMENT PRIMARY KEY,
  payment_amount FLOAT NOT NULL,
  card_id INT,
  loan_id INT NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (card_id) REFERENCES card(id),
  FOREIGN KEY (loan_id) REFERENCES loan(id)
);

CREATE TABLE atm (
  id INT AUTO_INCREMENT PRIMARY KEY,
  location VARCHAR(255) NOT NULL,
  open_date DATETIME NOT NULL,
  balance FLOAT NOT NULL DEFAULT 0,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE transaction (
  id INT AUTO_INCREMENT PRIMARY KEY,
  sum FLOAT NOT NULL,
  status VARCHAR(255) NOT NULL,
  sender_card_id INT NOT NULL,
  getter_card_id INT NOT NULL,
  fee FLOAT,
  description VARCHAR(255),
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (sender_card_id) REFERENCES card(id),
  FOREIGN KEY (getter_card_id) REFERENCES card(id)
);
